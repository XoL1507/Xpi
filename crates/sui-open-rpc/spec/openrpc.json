{
  "openrpc": "1.2.6",
  "info": {
    "title": "Sui JSON-RPC",
    "description": "Sui JSON-RPC API for interaction with the Sui network gateway.",
    "contact": {
      "name": "Mysten Labs",
      "url": "https://mystenlabs.com",
      "email": "build@mystenlabs.com"
    },
    "license": {
      "name": "Apache-2.0",
      "url": "https://raw.githubusercontent.com/MystenLabs/sui/main/LICENSE"
    },
    "version": "0.6.1"
  },
  "methods": [
    {
      "name": "sui_batchTransaction",
      "tags": [
        {
          "name": "Transaction Builder API"
        }
      ],
      "description": "Create an unsigned batched transaction.",
      "params": [
        {
          "name": "signer",
          "description": "the transaction signer's Sui address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        },
        {
          "name": "single_transaction_params",
          "description": "list of transaction request parameters",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RPCTransactionRequestParams"
            }
          }
        },
        {
          "name": "gas",
          "description": "gas object to be used in this transaction, the gateway will pick one from the signer's possession if not provided",
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "gas_budget",
          "description": "the gas budget, the transaction will fail if the gas cost exceed the budget",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "TransactionBytes",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/TransactionBytes"
        }
      },
      "examples": [
        {
          "name": "Create unsigned batch transaction data.",
          "params": [
            {
              "name": "signer",
              "value": "0x9b07815f04497e2e05d22cac3aa061410b20868c"
            },
            {
              "name": "single_transaction_params",
              "value": [
                {
                  "moveCallRequestParams": {
                    "arguments": [
                      "Example NFT",
                      "An NFT created by the Sui Command Line Tool",
                      "ipfs://bafkreibngqhl3gaa7daob4i2vccziay2jjlp435cf66vhono7nrvww53ty"
                    ],
                    "function": "mint",
                    "module": "devnet_nft",
                    "packageObjectId": "0x0000000000000000000000000000000000000002",
                    "typeArguments": []
                  }
                },
                {
                  "transferObjectRequestParams": {
                    "objectId": "0xefef92cbf44b581f23222c10916b17a369b4da03",
                    "recipient": "0xc619154c42a1c61be9902717b24b8ec168fe4896"
                  }
                }
              ]
            },
            {
              "name": "gas",
              "value": "0xf5b70ccb10f1a705e061d0fdfa189618d28b0d44"
            },
            {
              "name": "gas_budget",
              "value": 1000
            }
          ],
          "result": {
            "name": "Result",
            "value": {
              "gas": {
                "digest": "awpBQDJ2Q3sl8P++iXz0dsB3fp0kb/OXSsXxs1CqFsQ=",
                "objectId": "0xf5b70ccb10f1a705e061d0fdfa189618d28b0d44",
                "version": 1
              },
              "inputObjects": [
                {
                  "MovePackage": "0x0000000000000000000000000000000000000002"
                },
                {
                  "ImmOrOwnedMoveObject": {
                    "digest": "+N7M88PFGPFG3pVU8D8nqD1bEYXznnHvNX4r2eE5YlE=",
                    "objectId": "0xefef92cbf44b581f23222c10916b17a369b4da03",
                    "version": 1
                  }
                },
                {
                  "ImmOrOwnedMoveObject": {
                    "digest": "awpBQDJ2Q3sl8P++iXz0dsB3fp0kb/OXSsXxs1CqFsQ=",
                    "objectId": "0xf5b70ccb10f1a705e061d0fdfa189618d28b0d44",
                    "version": 1
                  }
                }
              ],
              "txBytes": "VHJhbnNhY3Rpb25EYXRhOjoBAgIAAAAAAAAAAAAAAAAAAAAAAAAAAgEAAAAAAAAAIJ0HWVK1gDbyp7VhRGWSQDxnLw2+Ep8eORE/n2Fk6ihnCmRldm5ldF9uZnQEbWludAADAAtFeGFtcGxlIE5GVAArQW4gTkZUIGNyZWF0ZWQgYnkgdGhlIFN1aSBDb21tYW5kIExpbmUgVG9vbABCaXBmczovL2JhZmtyZWlibmdxaGwzZ2FhN2Rhb2I0aTJ2Y2N6aWF5MmpqbHA0MzVjZjY2dmhvbm83bnJ2d3c1M3R5AMYZFUxCocYb6ZAnF7JLjsFo/kiW7++Sy/RLWB8jIiwQkWsXo2m02gMBAAAAAAAAACD43szzw8UY8UbelVTwPyeoPVsRhfOece81fivZ4TliUZsHgV8ESX4uBdIsrDqgYUELIIaM9bcMyxDxpwXgYdD9+hiWGNKLDUQBAAAAAAAAACBrCkFAMnZDeyXw/76JfPR2wHd+nSRv85dKxfGzUKoWxAEAAAAAAAAA6AMAAAAAAAA="
            }
          }
        }
      ]
    },
    {
      "name": "sui_executeTransaction",
      "tags": [
        {
          "name": "Gateway Transaction Execution API"
        }
      ],
      "description": "Execute the transaction using the transaction data, signature and public key.",
      "params": [
        {
          "name": "tx_bytes",
          "description": "transaction data bytes, as base-64 encoded string",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Base64"
          }
        },
        {
          "name": "sig_scheme",
          "description": "Flag of the signature scheme that is used.",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SignatureScheme"
          }
        },
        {
          "name": "signature",
          "description": "transaction signature, as base-64 encoded string",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Base64"
          }
        },
        {
          "name": "pub_key",
          "description": "signer's public key, as base-64 encoded string",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Base64"
          }
        }
      ],
      "result": {
        "name": "SuiTransactionResponse",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SuiTransactionResponse"
        }
      },
      "examples": [
        {
          "name": "Execute an object transfer transaction",
          "params": [
            {
              "name": "tx_bytes",
              "value": "VHJhbnNhY3Rpb25EYXRhOjoAAENs56klSzDSU+RWfMr6XzbOhMgKQSfIuu++oJOfFSRxK003oCCyjN0CAAAAAAAAACAyE4rjTSLmOXrzqaceTvofutFssM+v3lsohIWOg/pBRqB5d3G4/iYvpOg6GofMBk8jRD6NqLyb5k4NWueWiEJ0rvMAWuZzOAkCAAAAAAAAACDI7B1bhN1iieGTufiN5KmUNYyfhWE1I2w+dakl4cd6wwEAAAAAAAAA6AMAAAAAAAA="
            },
            {
              "name": "sig_scheme",
              "value": "ED25519"
            },
            {
              "name": "signature",
              "value": "x2rDLYmKAdbuB+Dwghvv+FIUKPlwLJQBvPq9aXMVjN3xMjsNfAKCGUgbJUIkc/qFSZtr+gEnk9wF/L7TE1W+Cg=="
            },
            {
              "name": "pub_key",
              "value": "i4VvPsULQhSm++R+hpszac5EOLnJbh02NAMScP/4+L0="
            }
          ],
          "result": {
            "name": "Result",
            "value": {
              "certificate": {
                "authSignInfo": {
                  "epoch": 0,
                  "signature": [],
                  "signers_map": [
                    58,
                    48,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ]
                },
                "data": {
                  "gasBudget": 1000,
                  "gasPayment": {
                    "digest": "yOwdW4TdYonhk7n4jeSplDWMn4VhNSNsPnWpJeHHesM=",
                    "objectId": "0xa8bc9be64e0d5ae796884274aef3005ae6733809",
                    "version": 2
                  },
                  "sender": "0xa0797771b8fe262fa4e83a1a87cc064f23443e8d",
                  "transactions": [
                    {
                      "TransferObject": {
                        "objectRef": {
                          "digest": "MhOK400i5jl686mnHk76H7rRbLDPr95bKISFjoP6QUY=",
                          "objectId": "0x4127c8baefbea0939f1524712b4d37a020b28cdd",
                          "version": 2
                        },
                        "recipient": "0x436ce7a9254b30d253e4567ccafa5f36ce84c80a"
                      }
                    }
                  ]
                },
                "transactionDigest": "w05NXKj399+qCDscEa9LhE/5Sz++9uNrUY2jrUxYVvo=",
                "txSignature": "AMdqwy2JigHW7gfg8IIb7/hSFCj5cCyUAbz6vWlzFYzd8TI7DXwCghlIGyVCJHP6hUmba/oBJ5PcBfy+0xNVvgqLhW8+xQtCFKb75H6GmzNpzkQ4ucluHTY0AxJw//j4vQ=="
              },
              "effects": {
                "gasObject": {
                  "owner": {
                    "ObjectOwner": "0xa0797771b8fe262fa4e83a1a87cc064f23443e8d"
                  },
                  "reference": {
                    "digest": "yOwdW4TdYonhk7n4jeSplDWMn4VhNSNsPnWpJeHHesM=",
                    "objectId": "0xa8bc9be64e0d5ae796884274aef3005ae6733809",
                    "version": 2
                  }
                },
                "gasUsed": {
                  "computationCost": 100,
                  "storageCost": 100,
                  "storageRebate": 10
                },
                "mutated": [
                  {
                    "owner": {
                      "AddressOwner": "0xa0797771b8fe262fa4e83a1a87cc064f23443e8d"
                    },
                    "reference": {
                      "digest": "yOwdW4TdYonhk7n4jeSplDWMn4VhNSNsPnWpJeHHesM=",
                      "objectId": "0xa8bc9be64e0d5ae796884274aef3005ae6733809",
                      "version": 2
                    }
                  },
                  {
                    "owner": {
                      "AddressOwner": "0x436ce7a9254b30d253e4567ccafa5f36ce84c80a"
                    },
                    "reference": {
                      "digest": "MhOK400i5jl686mnHk76H7rRbLDPr95bKISFjoP6QUY=",
                      "objectId": "0x4127c8baefbea0939f1524712b4d37a020b28cdd",
                      "version": 2
                    }
                  }
                ],
                "status": {
                  "status": "success"
                },
                "transactionDigest": "aGRkUkqHa0Y9EpdgNWjEDoFNnVOW0jCHoP1kHpHg4A0="
              },
              "parsed_data": null,
              "timestamp_ms": null
            }
          }
        }
      ]
    },
    {
      "name": "sui_getMoveFunctionArgTypes",
      "tags": [
        {
          "name": "Full Node API"
        }
      ],
      "description": "Return the argument types of a Move function, based on normalized Type.",
      "params": [
        {
          "name": "package",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "module",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "function",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "Vec<MoveFunctionArgType>",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/MoveFunctionArgType"
          }
        }
      }
    },
    {
      "name": "sui_getNormalizedMoveFunction",
      "tags": [
        {
          "name": "Full Node API"
        }
      ],
      "description": "Return a structured representation of Move function",
      "params": [
        {
          "name": "package",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "module_name",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "function_name",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "SuiMoveNormalizedFunction",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SuiMoveNormalizedFunction"
        }
      }
    },
    {
      "name": "sui_getNormalizedMoveModule",
      "tags": [
        {
          "name": "Full Node API"
        }
      ],
      "description": "Return a structured representation of Move module",
      "params": [
        {
          "name": "package",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "module_name",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "SuiMoveNormalizedModule",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SuiMoveNormalizedModule"
        }
      }
    },
    {
      "name": "sui_getNormalizedMoveModulesByPackage",
      "tags": [
        {
          "name": "Full Node API"
        }
      ],
      "description": "Return structured representations of all modules in the given package",
      "params": [
        {
          "name": "package",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        }
      ],
      "result": {
        "name": "BTreeMap<String,SuiMoveNormalizedModule>",
        "required": true,
        "schema": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/SuiMoveNormalizedModule"
          }
        }
      }
    },
    {
      "name": "sui_getNormalizedMoveStruct",
      "tags": [
        {
          "name": "Full Node API"
        }
      ],
      "description": "Return a structured representation of Move struct",
      "params": [
        {
          "name": "package",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "module_name",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "struct_name",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "SuiMoveNormalizedStruct",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SuiMoveNormalizedStruct"
        }
      }
    },
    {
      "name": "sui_getObject",
      "tags": [
        {
          "name": "Read API"
        }
      ],
      "description": "Return the object information for a specified object",
      "params": [
        {
          "name": "object_id",
          "description": "the ID of the queried object",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        }
      ],
      "result": {
        "name": "GetObjectDataResponse",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ObjectRead"
        }
      },
      "examples": [
        {
          "name": "Get Object data",
          "params": [
            {
              "name": "object_id",
              "value": "0xf6c012cded9ef9ba5e5bf042464b5ca6488b897c"
            }
          ],
          "result": {
            "name": "Result",
            "value": {
              "details": {
                "data": {
                  "dataType": "moveObject",
                  "fields": {
                    "balance": 10000,
                    "id": {
                      "id": "0xf6c012cded9ef9ba5e5bf042464b5ca6488b897c"
                    }
                  },
                  "has_public_transfer": true,
                  "type": "0x2::coin::Coin<0x2::coin::Coin<0x2::sui::SUI>>"
                },
                "owner": {
                  "AddressOwner": "0x005b2e17f00fc0bc8e7ed3f2ab59d607b0e3586b"
                },
                "previousTransaction": "2hzaTkK0FFsm+jXqGdJYsRPY4+EryiqmErME7OWyWYg=",
                "reference": {
                  "digest": "gY3XI04EmRMjPrkYwRY4r4nVdb65kAPTCiRax0oC4m4=",
                  "objectId": "0xf6c012cded9ef9ba5e5bf042464b5ca6488b897c",
                  "version": 1
                },
                "storageRebate": 100
              },
              "status": "Exists"
            }
          }
        }
      ]
    },
    {
      "name": "sui_getObjectsOwnedByAddress",
      "tags": [
        {
          "name": "Read API"
        }
      ],
      "description": "Return the list of objects owned by an address.",
      "params": [
        {
          "name": "address",
          "description": "the owner's Sui address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        }
      ],
      "result": {
        "name": "Vec<SuiObjectInfo>",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/ObjectInfo"
          }
        }
      },
      "examples": [
        {
          "name": "Get objects owned by an address",
          "params": [
            {
              "name": "address",
              "value": "0x45cb80ee1b9c00a93345ce5f12bea9ffe04748d6"
            }
          ],
          "result": {
            "name": "Result",
            "value": [
              {
                "digest": "yVlrRTjQ3CS+w3G7PkY0Vh+IkuYEAhq5a2Mur6Ip7D0=",
                "object_id": "0x696c30631735193aea95b8f9082c10620c0d6e3f",
                "owner": {
                  "AddressOwner": "0x45cb80ee1b9c00a93345ce5f12bea9ffe04748d6"
                },
                "previous_transaction": "2IVEK0SXJSbE6M4loEFsOVXYGLsasOgyh31igjPj4dY=",
                "type_": "0x2::coin::Coin<0x2::sui::SUI>",
                "version": 0
              },
              {
                "digest": "AbHcscqslCcipHh7sYXkeRkWkm5f2yXdhC9zarlz6H8=",
                "object_id": "0x4f76b71a80ec4f332f4d1a6742c537f2bb32473b",
                "owner": {
                  "AddressOwner": "0x45cb80ee1b9c00a93345ce5f12bea9ffe04748d6"
                },
                "previous_transaction": "U7SFeEJ4mh3VkWdimzxcq+R9v0iCfsCBjgDeSyl/BHw=",
                "type_": "0x2::coin::Coin<0x2::sui::SUI>",
                "version": 0
              },
              {
                "digest": "IyOgbrw1a61hRyazE9gRAS1L5yN1VocSCnxt8jicNzw=",
                "object_id": "0x3beda43d6e9f9b1b1bc44cdfce3574e7f7f0b2de",
                "owner": {
                  "AddressOwner": "0x45cb80ee1b9c00a93345ce5f12bea9ffe04748d6"
                },
                "previous_transaction": "j74GvaemESBlJmjdVof+5z+seixWTaaJ6dp24UMNGR8=",
                "type_": "0x2::coin::Coin<0x2::sui::SUI>",
                "version": 0
              },
              {
                "digest": "XREj8rigrGBrlApm5C79eCr1IDESMxrcLtb0Atyjlr8=",
                "object_id": "0xbc937d42f74104aa291871f4b9d120f76583a1da",
                "owner": {
                  "AddressOwner": "0x45cb80ee1b9c00a93345ce5f12bea9ffe04748d6"
                },
                "previous_transaction": "5t+jrIpX6giGCHD9UVz3ymr7iH3R4Jvo5FHNPDZAdmI=",
                "type_": "0x2::coin::Coin<0x2::sui::SUI>",
                "version": 0
              }
            ]
          }
        }
      ]
    },
    {
      "name": "sui_getObjectsOwnedByObject",
      "tags": [
        {
          "name": "Read API"
        }
      ],
      "description": "Return the list of objects owned by an object.",
      "params": [
        {
          "name": "object_id",
          "description": "the ID of the owner object",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        }
      ],
      "result": {
        "name": "Vec<SuiObjectInfo>",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/ObjectInfo"
          }
        }
      },
      "examples": [
        {
          "name": "Get objects owned by an object",
          "params": [
            {
              "name": "object_id",
              "value": "0x3c0231898be0722c08e4eb229c44cb957d29cf73"
            }
          ],
          "result": {
            "name": "Result",
            "value": [
              {
                "digest": "136J57/v1Pc62j0ZrIfUU1HwGWqIC5XD6iRN0GDStlM=",
                "object_id": "0x70af8a1b9c542d49b3c83cfb9c683fb7d0526e29",
                "owner": {
                  "ObjectOwner": "0x3c0231898be0722c08e4eb229c44cb957d29cf73"
                },
                "previous_transaction": "gZbQSLem0EyO3IlXnYb9P8kMUvmhTGuBK5T+YTxbzrs=",
                "type_": "0x2::coin::Coin<0x2::sui::SUI>",
                "version": 0
              },
              {
                "digest": "swBX0KkyaEysNSzcGj6JgCnQJO7B1Exq9eL6ze2E0Ds=",
                "object_id": "0x5eeb1d449e2516166d57d71fdeb154d0dc9ecdb7",
                "owner": {
                  "ObjectOwner": "0x3c0231898be0722c08e4eb229c44cb957d29cf73"
                },
                "previous_transaction": "U3NRTxbj1m4ACBBRZLtzoe1YssGLDL83d5LiBua4DU0=",
                "type_": "0x2::coin::Coin<0x2::sui::SUI>",
                "version": 0
              },
              {
                "digest": "mg+/vxtUmyuya46u4IiVFG3ye8PPJhDBSy4nwe7VbDM=",
                "object_id": "0x5eea64e2e70563b1589026c4e37f941a451ef820",
                "owner": {
                  "ObjectOwner": "0x3c0231898be0722c08e4eb229c44cb957d29cf73"
                },
                "previous_transaction": "tXkDQVDqRrzPdlPgC28ktjvQTaaLwWDHTNhE+SJiP6U=",
                "type_": "0x2::coin::Coin<0x2::sui::SUI>",
                "version": 0
              },
              {
                "digest": "YCsUTXmIN9uwFHTINWbFsqU1QQ3aod0/xK8yGNdsx6o=",
                "object_id": "0x8cdd6ef2d0531ce359f32e8bd0cd5f9e1c4ed785",
                "owner": {
                  "ObjectOwner": "0x3c0231898be0722c08e4eb229c44cb957d29cf73"
                },
                "previous_transaction": "a+GABOXjjLNcyvGLfxpOPcex5//T29aC9gDR9i3Akh8=",
                "type_": "0x2::coin::Coin<0x2::sui::SUI>",
                "version": 0
              }
            ]
          }
        }
      ]
    },
    {
      "name": "sui_getRawObject",
      "tags": [
        {
          "name": "BCS API"
        }
      ],
      "description": "Return the raw BCS serialized move object bytes for a specified object.",
      "params": [
        {
          "name": "object_id",
          "description": "the id of the object",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        }
      ],
      "result": {
        "name": "GetRawObjectDataResponse",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ObjectRead"
        }
      },
      "examples": [
        {
          "name": "Get Raw Object data",
          "params": [
            {
              "name": "object_id",
              "value": "0x7f7dbfca95055adc5e147a1eee2edd2371447444"
            }
          ],
          "result": {
            "name": "Result",
            "value": {
              "details": {
                "data": {
                  "bcs_bytes": "f32/ypUFWtxeFHoe7i7dI3FEdEQQJwAAAAAAAA==",
                  "dataType": "moveObject",
                  "has_public_transfer": true,
                  "type": "0x2::coin::Coin<0x2::sui::SUI>",
                  "version": 1
                },
                "owner": {
                  "AddressOwner": "0x4689c946f69a585924b91c4b8ae6d4cd6e1e02f6"
                },
                "previousTransaction": "ZY0hvOm4i9zu4SlBRO7EfPOTiLtoD2m3QmvFKSlpL9w=",
                "reference": {
                  "digest": "fS/zdMP4cPNvtyirQYeDEgbRUYH/fFB3JBdYapNjOCk=",
                  "objectId": "0x7f7dbfca95055adc5e147a1eee2edd2371447444",
                  "version": 1
                },
                "storageRebate": 100
              },
              "status": "Exists"
            }
          }
        }
      ]
    },
    {
      "name": "sui_getRecentTransactions",
      "tags": [
        {
          "name": "Read API"
        }
      ],
      "description": "Return list of recent transaction digest.",
      "params": [
        {
          "name": "count",
          "description": "maximum size of the result",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "Vec<(GatewayTxSeqNumber,TransactionDigest)>",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              {
                "$ref": "#/components/schemas/TransactionDigest"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      },
      "examples": [
        {
          "name": "Get recent transactions",
          "params": [
            {
              "name": "count",
              "value": 5
            }
          ],
          "result": {
            "name": "Result",
            "value": [
              [
                5,
                "/LptbgzLE9Pb/nYUuB6nayVeXUNQMs2FlfN+uPwA/80="
              ],
              [
                6,
                "oAr8XqnjnLLyMlJc3O6jWkM6ew9Q6N+y4hukl8VKswo="
              ],
              [
                7,
                "PZrcB8FCnE1rvsr5RXya93qR9jF2CFOTTTg2NLz3wyY="
              ],
              [
                8,
                "VQCaYfHeDq5CCi5K4bt3KrLdXVp9+pScDvBpCOelSQA="
              ],
              [
                9,
                "8nm+TGoQHpo69cgHARL4CGSLNu+/je6KGoLeRtlQTpY="
              ]
            ]
          }
        }
      ]
    },
    {
      "name": "sui_getTotalTransactionNumber",
      "tags": [
        {
          "name": "Read API"
        }
      ],
      "description": "Return the total number of transactions known to the server.",
      "params": [],
      "result": {
        "name": "u64",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "examples": [
        {
          "name": "Get total number of transactions",
          "params": [],
          "result": {
            "name": "Result",
            "value": 100
          }
        }
      ]
    },
    {
      "name": "sui_getTransaction",
      "tags": [
        {
          "name": "Read API"
        }
      ],
      "description": "Return the transaction response object.",
      "params": [
        {
          "name": "digest",
          "description": "the digest of the queried transaction",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/TransactionDigest"
          }
        }
      ],
      "result": {
        "name": "SuiTransactionResponse",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SuiTransactionResponse"
        }
      },
      "examples": [
        {
          "name": "Return the transaction response object for specified transaction digest",
          "params": [
            {
              "name": "digest",
              "value": "XwGimIeh2V5bVIthbaY7DOB9gW6J73uaOCF3tEIruqI="
            }
          ],
          "result": {
            "name": "Result",
            "value": {
              "certificate": {
                "authSignInfo": {
                  "epoch": 0,
                  "signature": [],
                  "signers_map": [
                    58,
                    48,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ]
                },
                "data": {
                  "gasBudget": 1000,
                  "gasPayment": {
                    "digest": "zpT52V3KWkD04XaZGO6/n7rgC9OOV4cvRSJEaOH8F8g=",
                    "objectId": "0x600688804e0784489f90f7f866cc29dfb1da6373",
                    "version": 2
                  },
                  "sender": "0xecbf5390a90501f257f69f45f34d5cbcd7c9e575",
                  "transactions": [
                    {
                      "TransferObject": {
                        "objectRef": {
                          "digest": "fcN/rn2TKYoSRcMbQgaIwWhstNE1bRcYDdguk6SDxas=",
                          "objectId": "0x147089dc4318fdd400db67364ef350c952676d85",
                          "version": 2
                        },
                        "recipient": "0xc399633a2eb310bca9124e5f2f38ce739eaacbb6"
                      }
                    }
                  ]
                },
                "transactionDigest": "XwGimIeh2V5bVIthbaY7DOB9gW6J73uaOCF3tEIruqI=",
                "txSignature": "AC+xK3NNiFOz2Jl11RMCldrpLefiv1e4eWtdNQZ734yryF0Mln/nmgctBj+bAzo6c2L0xtv1usWl/mdyS9qUBQ3jpPFsyVOMOR7MVPpASSwHg2GXsoqoVGcwRO9DE6mUEg=="
              },
              "effects": {
                "gasObject": {
                  "owner": {
                    "ObjectOwner": "0xecbf5390a90501f257f69f45f34d5cbcd7c9e575"
                  },
                  "reference": {
                    "digest": "zpT52V3KWkD04XaZGO6/n7rgC9OOV4cvRSJEaOH8F8g=",
                    "objectId": "0x600688804e0784489f90f7f866cc29dfb1da6373",
                    "version": 2
                  }
                },
                "gasUsed": {
                  "computationCost": 100,
                  "storageCost": 100,
                  "storageRebate": 10
                },
                "mutated": [
                  {
                    "owner": {
                      "AddressOwner": "0xecbf5390a90501f257f69f45f34d5cbcd7c9e575"
                    },
                    "reference": {
                      "digest": "zpT52V3KWkD04XaZGO6/n7rgC9OOV4cvRSJEaOH8F8g=",
                      "objectId": "0x600688804e0784489f90f7f866cc29dfb1da6373",
                      "version": 2
                    }
                  },
                  {
                    "owner": {
                      "AddressOwner": "0xc399633a2eb310bca9124e5f2f38ce739eaacbb6"
                    },
                    "reference": {
                      "digest": "fcN/rn2TKYoSRcMbQgaIwWhstNE1bRcYDdguk6SDxas=",
                      "objectId": "0x147089dc4318fdd400db67364ef350c952676d85",
                      "version": 2
                    }
                  }
                ],
                "status": {
                  "status": "success"
                },
                "transactionDigest": "f35iXqMZqgoYSGZv/tIpGuJKP4F3NToFIg12XKnEIaM="
              },
              "parsed_data": null,
              "timestamp_ms": null
            }
          }
        }
      ]
    },
    {
      "name": "sui_getTransactionsByInputObject",
      "tags": [
        {
          "name": "Full Node API"
        }
      ],
      "description": "Return list of transactions for a specified input object.",
      "params": [
        {
          "name": "object",
          "description": "the ID of the input object",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        }
      ],
      "result": {
        "name": "Vec<(GatewayTxSeqNumber,TransactionDigest)>",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              {
                "$ref": "#/components/schemas/TransactionDigest"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      },
      "examples": [
        {
          "name": "Return the transaction digest for specified input object",
          "params": [
            {
              "name": "object",
              "value": "0x38698cd1fdcac3dce8d8c7ce863f313da3dbd92a"
            }
          ],
          "result": {
            "name": "Result",
            "value": [
              [
                5,
                "aAg/GP5HLzlVfcQqrv7rjBVNfdxFa4rqoxMsdANTHck="
              ],
              [
                6,
                "joP24ZjS19F7qR3cfnF89wjJNwYPBASHNuwz+xdG2Zk="
              ],
              [
                7,
                "peWM1cZ37YBPgvHIWHuY1kwAv7RsOEO9i/bM+nxlqGE="
              ]
            ]
          }
        }
      ]
    },
    {
      "name": "sui_getTransactionsByMoveFunction",
      "tags": [
        {
          "name": "Full Node API"
        }
      ],
      "description": "Return list of transactions for a specified move function.",
      "params": [
        {
          "name": "package",
          "description": "the Move package ID, e.g. `0x2`",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "module",
          "description": "the Move module name, e.g. `devnet_nft`",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "function",
          "description": "the move function name, e.g. `mint`",
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "Vec<(GatewayTxSeqNumber,TransactionDigest)>",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              {
                "$ref": "#/components/schemas/TransactionDigest"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      },
      "examples": [
        {
          "name": "Return the transaction digest for specified input object",
          "params": [
            {
              "name": "package",
              "value": "0x0000000000000000000000000000000000000002"
            },
            {
              "name": "module",
              "value": "devnet_nft"
            },
            {
              "name": "function",
              "value": "function"
            }
          ],
          "result": {
            "name": "Result",
            "value": [
              [
                6,
                "g+8m0Si4j+Zr8m4ODQnNr3J9HYTMyql6Asw6mAQWcOE="
              ],
              [
                7,
                "YJ23FOmFjJbp5GmFXxzzv9+X6GWxDABG4pPAjOwPQHg="
              ],
              [
                8,
                "PZrEv0q7TX+CBkf9hdGRg97nx/+VVpf+K3BMlUCjhG4="
              ],
              [
                9,
                "kpi3Xbclwe4wJ7eD6mieGjjrR2xu/ETttc09/jL0v2w="
              ]
            ]
          }
        }
      ]
    },
    {
      "name": "sui_getTransactionsByMutatedObject",
      "tags": [
        {
          "name": "Full Node API"
        }
      ],
      "description": "Return list of transactions for a specified mutated object.",
      "params": [
        {
          "name": "object",
          "description": "the ID of the mutated object",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        }
      ],
      "result": {
        "name": "Vec<(GatewayTxSeqNumber,TransactionDigest)>",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              {
                "$ref": "#/components/schemas/TransactionDigest"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      },
      "examples": [
        {
          "name": "Return the transaction digest for specified mutated object",
          "params": [
            {
              "name": "object",
              "value": "0x9fc486e101f0e9e2703ac8666d06aecc4ddf7e79"
            }
          ],
          "result": {
            "name": "Result",
            "value": [
              [
                5,
                "PorELu8TheAUA+SaSylq3LIuon08kuTOIlasZFy6vcM="
              ],
              [
                6,
                "bPG58uyEgaJsp9gRaVWXlAKLjwLkMCpVldiImmfG0xw="
              ],
              [
                7,
                "bJcOVn8D72fYEaT4Q2ZbjePygvpIs+AQO6m77WoGFTs="
              ]
            ]
          }
        }
      ]
    },
    {
      "name": "sui_getTransactionsFromAddress",
      "tags": [
        {
          "name": "Full Node API"
        }
      ],
      "description": "Return list of transactions for a specified sender's Sui address.",
      "params": [
        {
          "name": "addr",
          "description": "the sender's Sui address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        }
      ],
      "result": {
        "name": "Vec<(GatewayTxSeqNumber,TransactionDigest)>",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              {
                "$ref": "#/components/schemas/TransactionDigest"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      },
      "examples": [
        {
          "name": "Return the transaction digest for specified sender address",
          "params": [
            {
              "name": "addr",
              "value": "0xc2c1d990080b41582358c6d41570821ed2f88bdc"
            }
          ],
          "result": {
            "name": "Result",
            "value": [
              [
                5,
                "JqNhlwxlpbEsQ4BdDW9UAqetDaW97FScfN6ga8Sh0zk="
              ],
              [
                6,
                "oiUh7qkzuIme+yBzWk9q7IITbv9z5oGcc3d9KzFEBZ0="
              ],
              [
                7,
                "EJYzYFOryNDoQ3EipycU+/EOvBcDPFtMkZiSbdzWAw0="
              ]
            ]
          }
        }
      ]
    },
    {
      "name": "sui_getTransactionsInRange",
      "tags": [
        {
          "name": "Read API"
        }
      ],
      "description": "Return list of transaction digests within the queried range.",
      "params": [
        {
          "name": "start",
          "description": "the matching transactions' sequence number will be greater than or equals to the starting sequence number",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "end",
          "description": "the matching transactions' sequence number will be less than the ending sequence number",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "Vec<(GatewayTxSeqNumber,TransactionDigest)>",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              {
                "$ref": "#/components/schemas/TransactionDigest"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      },
      "examples": [
        {
          "name": "Return the transaction digest in range",
          "params": [
            {
              "name": "start",
              "value": 5
            },
            {
              "name": "end",
              "value": 8
            }
          ],
          "result": {
            "name": "Result",
            "value": [
              [
                5,
                "k07o0WLNcF2h36DN6mjskM8fdWdamzhfR5/qfC3a0Lc="
              ],
              [
                6,
                "e3WANqdP22/b6kaj68d3nEXj4UFVeTUsEotNGi9C/fs="
              ],
              [
                7,
                "ycWnOkQRk+matswqkvfTeUiJgpLXBCBBi4RQLlBnlCI="
              ]
            ]
          }
        }
      ]
    },
    {
      "name": "sui_getTransactionsToAddress",
      "tags": [
        {
          "name": "Full Node API"
        }
      ],
      "description": "Return list of transactions for a specified recipient's Sui address.",
      "params": [
        {
          "name": "addr",
          "description": "the recipient's Sui address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        }
      ],
      "result": {
        "name": "Vec<(GatewayTxSeqNumber,TransactionDigest)>",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              {
                "$ref": "#/components/schemas/TransactionDigest"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      },
      "examples": [
        {
          "name": "Return the transaction digest for specified recipient address",
          "params": [
            {
              "name": "addr",
              "value": "0xf94830cb8e133a933152e034d51c788dc5ebd6c2"
            }
          ],
          "result": {
            "name": "Result",
            "value": [
              [
                5,
                "f4lyN3ZN3o15oBqyEEv3QqJ3oqvgNcpBxVa3IoeLmuY="
              ],
              [
                6,
                "tMaTpGQO6GK5a++E+pjS/O60uVhXZ3UHFvWIR92cZqI="
              ],
              [
                7,
                "AktUTHYjuRsMH3IjT4Qejqdr6ewLXXKHmwkdbW2Pgy4="
              ]
            ]
          }
        }
      ]
    },
    {
      "name": "sui_mergeCoins",
      "tags": [
        {
          "name": "Transaction Builder API"
        }
      ],
      "description": "Create an unsigned transaction to merge multiple coins into one coin.",
      "params": [
        {
          "name": "signer",
          "description": "the transaction signer's Sui address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        },
        {
          "name": "primary_coin",
          "description": "the coin object to merge into, this coin will remain after the transaction",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "coin_to_merge",
          "description": "the coin object to be merged, this coin will be destroyed, the balance will be added to `primary_coin`",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "gas",
          "description": "gas object to be used in this transaction, the gateway will pick one from the signer's possession if not provided",
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "gas_budget",
          "description": "the gas budget, the transaction will fail if the gas cost exceed the budget",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "TransactionBytes",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/TransactionBytes"
        }
      }
    },
    {
      "name": "sui_moveCall",
      "tags": [
        {
          "name": "Transaction Builder API"
        }
      ],
      "description": "Create an unsigned transaction to execute a Move call on the network, by calling the specified function in the module of a given package.",
      "params": [
        {
          "name": "signer",
          "description": "the transaction signer's Sui address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        },
        {
          "name": "package_object_id",
          "description": "the Move package ID, e.g. `0x2`",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "module",
          "description": "the Move module name, e.g. `devnet_nft`",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "function",
          "description": "the move function name, e.g. `mint`",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "type_arguments",
          "description": "the type arguments of the Move function",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeTag"
            }
          }
        },
        {
          "name": "arguments",
          "description": "the arguments to be passed into the Move function, in [SuiJson](https://docs.sui.io/build/sui-json) format",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuiJsonValue"
            }
          }
        },
        {
          "name": "gas",
          "description": "gas object to be used in this transaction, the gateway will pick one from the signer's possession if not provided",
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "gas_budget",
          "description": "the gas budget, the transaction will fail if the gas cost exceed the budget",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "TransactionBytes",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/TransactionBytes"
        }
      }
    },
    {
      "name": "sui_publish",
      "tags": [
        {
          "name": "Transaction Builder API"
        }
      ],
      "description": "Create an unsigned transaction to publish Move module.",
      "params": [
        {
          "name": "sender",
          "description": "the transaction signer's Sui address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        },
        {
          "name": "compiled_modules",
          "description": "the compiled bytes of a move module, the",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Base64"
            }
          }
        },
        {
          "name": "gas",
          "description": "gas object to be used in this transaction, the gateway will pick one from the signer's possession if not provided",
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "gas_budget",
          "description": "the gas budget, the transaction will fail if the gas cost exceed the budget",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "TransactionBytes",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/TransactionBytes"
        }
      }
    },
    {
      "name": "sui_splitCoin",
      "tags": [
        {
          "name": "Transaction Builder API"
        }
      ],
      "description": "Create an unsigned transaction to split a coin object into multiple coins.",
      "params": [
        {
          "name": "signer",
          "description": "the transaction signer's Sui address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        },
        {
          "name": "coin_object_id",
          "description": "the coin object to be spilt",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "split_amounts",
          "description": "the amounts to split out from the coin",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        },
        {
          "name": "gas",
          "description": "gas object to be used in this transaction, the gateway will pick one from the signer's possession if not provided",
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "gas_budget",
          "description": "the gas budget, the transaction will fail if the gas cost exceed the budget",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "TransactionBytes",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/TransactionBytes"
        }
      }
    },
    {
      "name": "sui_splitCoinEqual",
      "tags": [
        {
          "name": "Transaction Builder API"
        }
      ],
      "description": "Create an unsigned transaction to split a coin object into multiple equal-size coins.",
      "params": [
        {
          "name": "signer",
          "description": "the transaction signer's Sui address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        },
        {
          "name": "coin_object_id",
          "description": "the coin object to be spilt",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "split_count",
          "description": "the number of coins to split into",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "gas",
          "description": "gas object to be used in this transaction, the gateway will pick one from the signer's possession if not provided",
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "gas_budget",
          "description": "the gas budget, the transaction will fail if the gas cost exceed the budget",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "TransactionBytes",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/TransactionBytes"
        }
      }
    },
    {
      "name": "sui_subscribeEvent",
      "tags": [
        {
          "name": "Event Subscription"
        },
        {
          "name": "Websocket"
        },
        {
          "name": "PubSub"
        }
      ],
      "description": "Subscribe to a stream of Sui event",
      "params": [
        {
          "name": "filter",
          "description": "the filter criteria of the event stream, see the [Sui docs](https://docs.sui.io/build/pubsub#event-filters) for detailed examples.",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EventFilter"
          }
        }
      ],
      "result": {
        "name": "SuiEventEnvelope",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EventEnvelope"
        }
      }
    },
    {
      "name": "sui_syncAccountState",
      "tags": [
        {
          "name": "Wallet Sync API"
        }
      ],
      "description": "Synchronize client state with validators.",
      "params": [
        {
          "name": "address",
          "description": "the Sui address to be synchronized",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        }
      ],
      "result": {
        "name": "()",
        "required": true,
        "schema": {
          "type": "null"
        }
      }
    },
    {
      "name": "sui_transferObject",
      "tags": [
        {
          "name": "Transaction Builder API"
        }
      ],
      "description": "Create an unsigned transaction to transfer an object from one address to another. The object's type must allow public transfers",
      "params": [
        {
          "name": "signer",
          "description": "the transaction signer's Sui address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        },
        {
          "name": "object_id",
          "description": "the ID of the object to be transferred",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "gas",
          "description": "gas object to be used in this transaction, the gateway will pick one from the signer's possession if not provided",
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "gas_budget",
          "description": "the gas budget, the transaction will fail if the gas cost exceed the budget",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "recipient",
          "description": "the recipient's Sui address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        }
      ],
      "result": {
        "name": "TransactionBytes",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/TransactionBytes"
        }
      }
    },
    {
      "name": "sui_transferSui",
      "tags": [
        {
          "name": "Transaction Builder API"
        }
      ],
      "description": "Create an unsigned transaction to send SUI coin object to a Sui address. The SUI object is also used as the gas object.",
      "params": [
        {
          "name": "signer",
          "description": "the transaction signer's Sui address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        },
        {
          "name": "sui_object_id",
          "description": "the Sui coin object to be used in this transaction",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ObjectID"
          }
        },
        {
          "name": "gas_budget",
          "description": "the gas budget, the transaction will fail if the gas cost exceed the budget",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "recipient",
          "description": "the recipient's Sui address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        },
        {
          "name": "amount",
          "description": "the amount to be split out and transferred",
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "TransactionBytes",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/TransactionBytes"
        }
      }
    }
  ],
  "components": {
    "schemas": {
      "AuthorityQuorumSignInfo": {
        "description": "Represents at least a quorum (could be more) of authority signatures. STRONG_THRESHOLD indicates whether to use the quorum threshold for quorum check. When STRONG_THRESHOLD is true, the quorum is valid when the total stake is at least the quorum threshold (2f+1) of the committee; when STRONG_THRESHOLD is false, the quorum is valid when the total stake is at least the validity threshold (f+1) of the committee.",
        "type": "object",
        "required": [
          "epoch",
          "signature",
          "signers_map"
        ],
        "properties": {
          "epoch": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "signature": {
            "$ref": "#/components/schemas/Base64"
          },
          "signers_map": {
            "$ref": "#/components/schemas/Base64"
          }
        }
      },
      "Base64": {
        "type": "string"
      },
      "CertifiedTransaction": {
        "type": "object",
        "required": [
          "authSignInfo",
          "data",
          "transactionDigest",
          "txSignature"
        ],
        "properties": {
          "authSignInfo": {
            "description": "authority signature information, if available, is signed by an authority, applied on `data`.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AuthorityQuorumSignInfo"
              }
            ]
          },
          "data": {
            "$ref": "#/components/schemas/TransactionData"
          },
          "transactionDigest": {
            "$ref": "#/components/schemas/TransactionDigest"
          },
          "txSignature": {
            "description": "tx_signature is signed by the transaction sender, applied on `data`.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Signature"
              }
            ]
          }
        }
      },
      "Data": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "bcs_bytes",
              "dataType",
              "has_public_transfer",
              "type",
              "version"
            ],
            "properties": {
              "bcs_bytes": {
                "$ref": "#/components/schemas/Base64"
              },
              "child_count": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "dataType": {
                "type": "string",
                "enum": [
                  "moveObject"
                ]
              },
              "has_public_transfer": {
                "type": "boolean"
              },
              "type": {
                "type": "string"
              },
              "version": {
                "$ref": "#/components/schemas/SequenceNumber"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "dataType",
              "id",
              "module_map"
            ],
            "properties": {
              "dataType": {
                "type": "string",
                "enum": [
                  "package"
                ]
              },
              "id": {
                "$ref": "#/components/schemas/ObjectID"
              },
              "module_map": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/Base64"
                }
              }
            }
          }
        ]
      },
      "Ed25519SuiSignature": {
        "$ref": "#/components/schemas/Base64"
      },
      "Event": {
        "oneOf": [
          {
            "description": "Move-specific event",
            "type": "object",
            "required": [
              "moveEvent"
            ],
            "properties": {
              "moveEvent": {
                "type": "object",
                "required": [
                  "bcs",
                  "packageId",
                  "sender",
                  "transactionModule",
                  "type"
                ],
                "properties": {
                  "bcs": {
                    "$ref": "#/components/schemas/Base64"
                  },
                  "fields": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/MoveStruct"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "packageId": {
                    "$ref": "#/components/schemas/ObjectID"
                  },
                  "sender": {
                    "$ref": "#/components/schemas/SuiAddress"
                  },
                  "transactionModule": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Module published",
            "type": "object",
            "required": [
              "publish"
            ],
            "properties": {
              "publish": {
                "type": "object",
                "required": [
                  "packageId",
                  "sender"
                ],
                "properties": {
                  "packageId": {
                    "$ref": "#/components/schemas/ObjectID"
                  },
                  "sender": {
                    "$ref": "#/components/schemas/SuiAddress"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Transfer objects to new address / wrap in another object / coin",
            "type": "object",
            "required": [
              "transferObject"
            ],
            "properties": {
              "transferObject": {
                "type": "object",
                "required": [
                  "objectId",
                  "packageId",
                  "recipient",
                  "sender",
                  "transactionModule",
                  "type",
                  "version"
                ],
                "properties": {
                  "objectId": {
                    "$ref": "#/components/schemas/ObjectID"
                  },
                  "packageId": {
                    "$ref": "#/components/schemas/ObjectID"
                  },
                  "recipient": {
                    "$ref": "#/components/schemas/Owner"
                  },
                  "sender": {
                    "$ref": "#/components/schemas/SuiAddress"
                  },
                  "transactionModule": {
                    "type": "string"
                  },
                  "type": {
                    "$ref": "#/components/schemas/TransferType"
                  },
                  "version": {
                    "$ref": "#/components/schemas/SequenceNumber"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Delete object",
            "type": "object",
            "required": [
              "deleteObject"
            ],
            "properties": {
              "deleteObject": {
                "type": "object",
                "required": [
                  "objectId",
                  "packageId",
                  "sender",
                  "transactionModule"
                ],
                "properties": {
                  "objectId": {
                    "$ref": "#/components/schemas/ObjectID"
                  },
                  "packageId": {
                    "$ref": "#/components/schemas/ObjectID"
                  },
                  "sender": {
                    "$ref": "#/components/schemas/SuiAddress"
                  },
                  "transactionModule": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "New object creation",
            "type": "object",
            "required": [
              "newObject"
            ],
            "properties": {
              "newObject": {
                "type": "object",
                "required": [
                  "objectId",
                  "packageId",
                  "recipient",
                  "sender",
                  "transactionModule"
                ],
                "properties": {
                  "objectId": {
                    "$ref": "#/components/schemas/ObjectID"
                  },
                  "packageId": {
                    "$ref": "#/components/schemas/ObjectID"
                  },
                  "recipient": {
                    "$ref": "#/components/schemas/Owner"
                  },
                  "sender": {
                    "$ref": "#/components/schemas/SuiAddress"
                  },
                  "transactionModule": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Epoch change",
            "type": "object",
            "required": [
              "epochChange"
            ],
            "properties": {
              "epochChange": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          },
          {
            "description": "New checkpoint",
            "type": "object",
            "required": [
              "checkpoint"
            ],
            "properties": {
              "checkpoint": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "EventEnvelope": {
        "type": "object",
        "required": [
          "event",
          "timestamp"
        ],
        "properties": {
          "event": {
            "description": "Specific event type",
            "allOf": [
              {
                "$ref": "#/components/schemas/Event"
              }
            ]
          },
          "timestamp": {
            "description": "UTC timestamp in milliseconds since epoch (1/1/1970)",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "txDigest": {
            "description": "Transaction digest of associated transaction, if any",
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransactionDigest"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "EventFilter": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "Package"
            ],
            "properties": {
              "Package": {
                "$ref": "#/components/schemas/ObjectID"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Module"
            ],
            "properties": {
              "Module": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Move StructTag string value of the event type e.g. `0x2::devnet_nft::MintNFTEvent`",
            "type": "object",
            "required": [
              "MoveEventType"
            ],
            "properties": {
              "MoveEventType": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "MoveEventField"
            ],
            "properties": {
              "MoveEventField": {
                "type": "object",
                "required": [
                  "path",
                  "value"
                ],
                "properties": {
                  "path": {
                    "type": "string"
                  },
                  "value": true
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "SenderAddress"
            ],
            "properties": {
              "SenderAddress": {
                "$ref": "#/components/schemas/SuiAddress"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "EventType"
            ],
            "properties": {
              "EventType": {
                "$ref": "#/components/schemas/EventType"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "ObjectId"
            ],
            "properties": {
              "ObjectId": {
                "$ref": "#/components/schemas/ObjectID"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "All"
            ],
            "properties": {
              "All": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventFilter"
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Any"
            ],
            "properties": {
              "Any": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventFilter"
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "And"
            ],
            "properties": {
              "And": {
                "type": "array",
                "items": [
                  {
                    "$ref": "#/components/schemas/EventFilter"
                  },
                  {
                    "$ref": "#/components/schemas/EventFilter"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Or"
            ],
            "properties": {
              "Or": {
                "type": "array",
                "items": [
                  {
                    "$ref": "#/components/schemas/EventFilter"
                  },
                  {
                    "$ref": "#/components/schemas/EventFilter"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "EventType": {
        "description": "Auto-generated discriminant enum variants",
        "type": "string",
        "enum": [
          "MoveEvent",
          "Publish",
          "TransferObject",
          "DeleteObject",
          "NewObject",
          "EpochChange",
          "Checkpoint"
        ]
      },
      "ExecutionStatus": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "success"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "error",
              "status"
            ],
            "properties": {
              "error": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "failure"
                ]
              }
            }
          }
        ]
      },
      "GasCostSummary": {
        "type": "object",
        "required": [
          "computationCost",
          "storageCost",
          "storageRebate"
        ],
        "properties": {
          "computationCost": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "storageCost": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "storageRebate": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "Hex": {
        "type": "string"
      },
      "InputObjectKind": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "MovePackage"
            ],
            "properties": {
              "MovePackage": {
                "$ref": "#/components/schemas/ObjectID"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "ImmOrOwnedMoveObject"
            ],
            "properties": {
              "ImmOrOwnedMoveObject": {
                "$ref": "#/components/schemas/ObjectRef"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "SharedMoveObject"
            ],
            "properties": {
              "SharedMoveObject": {
                "$ref": "#/components/schemas/ObjectID"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "MoveCall": {
        "type": "object",
        "required": [
          "function",
          "module",
          "package"
        ],
        "properties": {
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuiJsonValue"
            }
          },
          "function": {
            "type": "string"
          },
          "module": {
            "type": "string"
          },
          "package": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "typeArguments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MoveCallParams": {
        "type": "object",
        "required": [
          "arguments",
          "function",
          "module",
          "packageObjectId"
        ],
        "properties": {
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuiJsonValue"
            }
          },
          "function": {
            "type": "string"
          },
          "module": {
            "type": "string"
          },
          "packageObjectId": {
            "$ref": "#/components/schemas/ObjectID"
          },
          "typeArguments": {
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeTag"
            }
          }
        }
      },
      "MoveFunctionArgType": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "Pure"
            ]
          },
          {
            "type": "object",
            "required": [
              "Object"
            ],
            "properties": {
              "Object": {
                "$ref": "#/components/schemas/ObjectValueKind"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "MovePackage": {
        "type": "object",
        "required": [
          "disassembled"
        ],
        "properties": {
          "disassembled": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "MoveStruct": {
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MoveValue"
            }
          },
          {
            "type": "object",
            "required": [
              "fields",
              "type"
            ],
            "properties": {
              "fields": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/MoveValue"
                }
              },
              "type": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MoveValue"
            }
          }
        ]
      },
      "MoveValue": {
        "anyOf": [
          {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          {
            "type": "boolean"
          },
          {
            "$ref": "#/components/schemas/SuiAddress"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MoveValue"
            }
          },
          {
            "$ref": "#/components/schemas/Base64"
          },
          {
            "type": "string"
          },
          {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "$ref": "#/components/schemas/ObjectID"
              }
            }
          },
          {
            "$ref": "#/components/schemas/MoveStruct"
          },
          {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MoveValue"
              },
              {
                "type": "null"
              }
            ]
          }
        ]
      },
      "Object": {
        "type": "object",
        "required": [
          "data",
          "owner",
          "previousTransaction",
          "reference",
          "storageRebate"
        ],
        "properties": {
          "data": {
            "description": "The meat of the object",
            "allOf": [
              {
                "$ref": "#/components/schemas/Data"
              }
            ]
          },
          "owner": {
            "description": "The owner that unlocks this object",
            "allOf": [
              {
                "$ref": "#/components/schemas/Owner"
              }
            ]
          },
          "previousTransaction": {
            "description": "The digest of the transaction that created or last mutated this object",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionDigest"
              }
            ]
          },
          "reference": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "storageRebate": {
            "description": "The amount of SUI we would rebate if this object gets deleted. This number is re-calculated each time the object is mutated based on the present storage gas price.",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "ObjectDigest": {
        "$ref": "#/components/schemas/Base64"
      },
      "ObjectID": {
        "$ref": "#/components/schemas/Hex"
      },
      "ObjectInfo": {
        "type": "object",
        "required": [
          "digest",
          "objectId",
          "owner",
          "previousTransaction",
          "type",
          "version"
        ],
        "properties": {
          "digest": {
            "$ref": "#/components/schemas/ObjectDigest"
          },
          "objectId": {
            "$ref": "#/components/schemas/ObjectID"
          },
          "owner": {
            "$ref": "#/components/schemas/Owner"
          },
          "previousTransaction": {
            "$ref": "#/components/schemas/TransactionDigest"
          },
          "type": {
            "type": "string"
          },
          "version": {
            "$ref": "#/components/schemas/SequenceNumber"
          }
        }
      },
      "ObjectRead": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "details",
              "status"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/Object"
              },
              "status": {
                "type": "string",
                "enum": [
                  "Exists"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "details",
              "status"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/ObjectID"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NotExists"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "details",
              "status"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/ObjectRef"
              },
              "status": {
                "type": "string",
                "enum": [
                  "Deleted"
                ]
              }
            }
          }
        ]
      },
      "ObjectRef": {
        "type": "object",
        "required": [
          "digest",
          "objectId",
          "version"
        ],
        "properties": {
          "digest": {
            "description": "Base64 string representing the object digest",
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectDigest"
              }
            ]
          },
          "objectId": {
            "description": "Hex code as string representing the object id",
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectID"
              }
            ]
          },
          "version": {
            "description": "Object version.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SequenceNumber"
              }
            ]
          }
        }
      },
      "ObjectValueKind": {
        "type": "string",
        "enum": [
          "ByImmutableReference",
          "ByMutableReference",
          "ByValue"
        ]
      },
      "Owner": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "Shared",
              "Immutable"
            ]
          },
          {
            "description": "Object is exclusively owned by a single address, and is mutable.",
            "type": "object",
            "required": [
              "AddressOwner"
            ],
            "properties": {
              "AddressOwner": {
                "$ref": "#/components/schemas/SuiAddress"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Object is exclusively owned by a single object, and is mutable. The object ID is converted to SuiAddress as SuiAddress is universal.",
            "type": "object",
            "required": [
              "ObjectOwner"
            ],
            "properties": {
              "ObjectOwner": {
                "$ref": "#/components/schemas/SuiAddress"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "RPCTransactionRequestParams": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "transferObjectRequestParams"
            ],
            "properties": {
              "transferObjectRequestParams": {
                "$ref": "#/components/schemas/TransferObjectParams"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "moveCallRequestParams"
            ],
            "properties": {
              "moveCallRequestParams": {
                "$ref": "#/components/schemas/MoveCallParams"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Secp256k1SuiSignature": {
        "$ref": "#/components/schemas/Base64"
      },
      "SequenceNumber": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      },
      "Signature": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "Ed25519SuiSignature"
            ],
            "properties": {
              "Ed25519SuiSignature": {
                "$ref": "#/components/schemas/Ed25519SuiSignature"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Secp256k1SuiSignature"
            ],
            "properties": {
              "Secp256k1SuiSignature": {
                "$ref": "#/components/schemas/Secp256k1SuiSignature"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "SignatureScheme": {
        "type": "string",
        "enum": [
          "ED25519",
          "Secp256k1"
        ]
      },
      "SuiAddress": {
        "$ref": "#/components/schemas/Hex"
      },
      "SuiChangeEpoch": {
        "type": "object",
        "required": [
          "computation_charge",
          "epoch",
          "storage_charge"
        ],
        "properties": {
          "computation_charge": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "epoch": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "storage_charge": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "SuiJsonValue": {},
      "SuiMoveAbility": {
        "type": "string",
        "enum": [
          "Copy",
          "Drop",
          "Store",
          "Key"
        ]
      },
      "SuiMoveAbilitySet": {
        "type": "object",
        "required": [
          "abilities"
        ],
        "properties": {
          "abilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuiMoveAbility"
            }
          }
        }
      },
      "SuiMoveModuleId": {
        "type": "object",
        "required": [
          "address",
          "name"
        ],
        "properties": {
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SuiMoveNormalizedField": {
        "type": "object",
        "required": [
          "name",
          "type_"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "type_": {
            "$ref": "#/components/schemas/SuiMoveNormalizedType"
          }
        }
      },
      "SuiMoveNormalizedFunction": {
        "type": "object",
        "required": [
          "is_entry",
          "parameters",
          "return_",
          "type_parameters",
          "visibility"
        ],
        "properties": {
          "is_entry": {
            "type": "boolean"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuiMoveNormalizedType"
            }
          },
          "return_": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuiMoveNormalizedType"
            }
          },
          "type_parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuiMoveAbilitySet"
            }
          },
          "visibility": {
            "$ref": "#/components/schemas/SuiMoveVisibility"
          }
        }
      },
      "SuiMoveNormalizedModule": {
        "type": "object",
        "required": [
          "address",
          "exposed_functions",
          "file_format_version",
          "friends",
          "name",
          "structs"
        ],
        "properties": {
          "address": {
            "type": "string"
          },
          "exposed_functions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SuiMoveNormalizedFunction"
            }
          },
          "file_format_version": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuiMoveModuleId"
            }
          },
          "name": {
            "type": "string"
          },
          "structs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SuiMoveNormalizedStruct"
            }
          }
        }
      },
      "SuiMoveNormalizedStruct": {
        "type": "object",
        "required": [
          "abilities",
          "fields",
          "type_parameters"
        ],
        "properties": {
          "abilities": {
            "$ref": "#/components/schemas/SuiMoveAbilitySet"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuiMoveNormalizedField"
            }
          },
          "type_parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuiMoveStructTypeParameter"
            }
          }
        }
      },
      "SuiMoveNormalizedType": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "Bool",
              "U8",
              "U64",
              "U128",
              "Address",
              "Signer"
            ]
          },
          {
            "type": "object",
            "required": [
              "Struct"
            ],
            "properties": {
              "Struct": {
                "type": "object",
                "required": [
                  "address",
                  "module",
                  "name",
                  "type_arguments"
                ],
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "module": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type_arguments": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SuiMoveNormalizedType"
                    }
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Vector"
            ],
            "properties": {
              "Vector": {
                "$ref": "#/components/schemas/SuiMoveNormalizedType"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "TypeParameter"
            ],
            "properties": {
              "TypeParameter": {
                "type": "integer",
                "format": "uint16",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Reference"
            ],
            "properties": {
              "Reference": {
                "$ref": "#/components/schemas/SuiMoveNormalizedType"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "MutableReference"
            ],
            "properties": {
              "MutableReference": {
                "$ref": "#/components/schemas/SuiMoveNormalizedType"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "SuiMoveStructTypeParameter": {
        "type": "object",
        "required": [
          "constraints",
          "is_phantom"
        ],
        "properties": {
          "constraints": {
            "$ref": "#/components/schemas/SuiMoveAbilitySet"
          },
          "is_phantom": {
            "type": "boolean"
          }
        }
      },
      "SuiMoveVisibility": {
        "type": "string",
        "enum": [
          "Private",
          "Public",
          "Friend"
        ]
      },
      "SuiParsedMergeCoinResponse": {
        "type": "object",
        "required": [
          "updatedCoin",
          "updatedGas"
        ],
        "properties": {
          "updatedCoin": {
            "description": "The updated original coin object after merge",
            "allOf": [
              {
                "$ref": "#/components/schemas/Object"
              }
            ]
          },
          "updatedGas": {
            "description": "The updated gas payment object after deducting payment",
            "allOf": [
              {
                "$ref": "#/components/schemas/Object"
              }
            ]
          }
        }
      },
      "SuiParsedPublishResponse": {
        "type": "object",
        "required": [
          "createdObjects",
          "package",
          "updatedGas"
        ],
        "properties": {
          "createdObjects": {
            "description": "List of Move objects created as part of running the module initializers in the package",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Object"
            }
          },
          "package": {
            "description": "The newly published package object reference.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectRef"
              }
            ]
          },
          "updatedGas": {
            "description": "The updated gas payment object after deducting payment",
            "allOf": [
              {
                "$ref": "#/components/schemas/Object"
              }
            ]
          }
        }
      },
      "SuiParsedSplitCoinResponse": {
        "type": "object",
        "required": [
          "newCoins",
          "updatedCoin",
          "updatedGas"
        ],
        "properties": {
          "newCoins": {
            "description": "All the newly created coin objects generated from the split",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Object"
            }
          },
          "updatedCoin": {
            "description": "The updated original coin object after split",
            "allOf": [
              {
                "$ref": "#/components/schemas/Object"
              }
            ]
          },
          "updatedGas": {
            "description": "The updated gas payment object after deducting payment",
            "allOf": [
              {
                "$ref": "#/components/schemas/Object"
              }
            ]
          }
        }
      },
      "SuiParsedTransactionResponse": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "Publish"
            ],
            "properties": {
              "Publish": {
                "$ref": "#/components/schemas/SuiParsedPublishResponse"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "MergeCoin"
            ],
            "properties": {
              "MergeCoin": {
                "$ref": "#/components/schemas/SuiParsedMergeCoinResponse"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "SplitCoin"
            ],
            "properties": {
              "SplitCoin": {
                "$ref": "#/components/schemas/SuiParsedSplitCoinResponse"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "SuiTransactionResponse": {
        "type": "object",
        "required": [
          "certificate",
          "effects"
        ],
        "properties": {
          "certificate": {
            "$ref": "#/components/schemas/CertifiedTransaction"
          },
          "effects": {
            "$ref": "#/components/schemas/TransactionEffects"
          },
          "parsed_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SuiParsedTransactionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "timestamp_ms": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "TransactionBytes": {
        "type": "object",
        "required": [
          "gas",
          "inputObjects",
          "txBytes"
        ],
        "properties": {
          "gas": {
            "description": "the gas object to be used",
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectRef"
              }
            ]
          },
          "inputObjects": {
            "description": "objects to be used in this transaction",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InputObjectKind"
            }
          },
          "txBytes": {
            "description": "transaction data bytes, as base-64 encoded string",
            "allOf": [
              {
                "$ref": "#/components/schemas/Base64"
              }
            ]
          }
        }
      },
      "TransactionData": {
        "type": "object",
        "required": [
          "gasBudget",
          "gasPayment",
          "sender",
          "transactions"
        ],
        "properties": {
          "gasBudget": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "gasPayment": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "sender": {
            "$ref": "#/components/schemas/SuiAddress"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionKind"
            }
          }
        }
      },
      "TransactionDigest": {
        "description": "A transaction will have a (unique) digest.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Base64"
          }
        ]
      },
      "TransactionEffects": {
        "description": "The response from processing a transaction or a certified transaction",
        "type": "object",
        "required": [
          "gasObject",
          "gasUsed",
          "status",
          "transactionDigest"
        ],
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectRef"
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectRef"
            }
          },
          "dependencies": {
            "description": "The set of transaction digests this transaction depends on.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionDigest"
            }
          },
          "events": {
            "description": "The events emitted during execution. Note that only successful transactions emit events",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "gasObject": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "gasUsed": {
            "$ref": "#/components/schemas/GasCostSummary"
          },
          "mutated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectRef"
            }
          },
          "sharedObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectRef"
            }
          },
          "status": {
            "$ref": "#/components/schemas/ExecutionStatus"
          },
          "transactionDigest": {
            "$ref": "#/components/schemas/TransactionDigest"
          },
          "unwrapped": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectRef"
            }
          },
          "wrapped": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectRef"
            }
          }
        }
      },
      "TransactionKind": {
        "oneOf": [
          {
            "description": "Initiate an object transfer between addresses",
            "type": "object",
            "required": [
              "TransferObject"
            ],
            "properties": {
              "TransferObject": {
                "$ref": "#/components/schemas/TransferObject"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Publish a new Move module",
            "type": "object",
            "required": [
              "Publish"
            ],
            "properties": {
              "Publish": {
                "$ref": "#/components/schemas/MovePackage"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Call a function in a published Move module",
            "type": "object",
            "required": [
              "Call"
            ],
            "properties": {
              "Call": {
                "$ref": "#/components/schemas/MoveCall"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Initiate a SUI coin transfer between addresses",
            "type": "object",
            "required": [
              "TransferSui"
            ],
            "properties": {
              "TransferSui": {
                "$ref": "#/components/schemas/TransferSui"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "A system transaction that will update epoch information on-chain.",
            "type": "object",
            "required": [
              "ChangeEpoch"
            ],
            "properties": {
              "ChangeEpoch": {
                "$ref": "#/components/schemas/SuiChangeEpoch"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "TransferObject": {
        "type": "object",
        "required": [
          "objectRef",
          "recipient"
        ],
        "properties": {
          "objectRef": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "recipient": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        }
      },
      "TransferObjectParams": {
        "type": "object",
        "required": [
          "objectId",
          "recipient"
        ],
        "properties": {
          "objectId": {
            "$ref": "#/components/schemas/ObjectID"
          },
          "recipient": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        }
      },
      "TransferSui": {
        "type": "object",
        "required": [
          "recipient"
        ],
        "properties": {
          "amount": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint64",
            "minimum": 0.0
          },
          "recipient": {
            "$ref": "#/components/schemas/SuiAddress"
          }
        }
      },
      "TransferType": {
        "type": "string",
        "enum": [
          "Coin",
          "ToAddress",
          "ToObject"
        ]
      },
      "TypeTag": {
        "type": "string"
      }
    }
  }
}
