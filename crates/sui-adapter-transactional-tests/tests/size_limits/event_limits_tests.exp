processed 10 tasks

task 1 'publish'. lines 8-57:
created: object(1,0)
mutated: object(0,0)
gas summary: computation_cost: 1000000, storage_cost: 7873600,  storage_rebate: 0, non_refundable_storage_fee: 0

task 2 'run'. lines 58-60:
events: Event { package_id: Test, transaction_module: Identifier("M1"), sender: _, type_: StructTag { address: Test, module: Identifier("M1"), name: Identifier("NewValueEvent"), type_params: [] }, contents: [3, 9, 9, 9] }
mutated: object(0,0)
gas summary: computation_cost: 1000000, storage_cost: 988000,  storage_rebate: 978120, non_refundable_storage_fee: 9880

task 3 'run'. lines 61-63:
Error: Transaction Effects Status: Insufficient Gas.
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: InsufficientGas, source: Some(VMError { major_status: OUT_OF_GAS, sub_status: None, message: None, exec_state: Some(ExecutionState { stack_trace: [(Some(ModuleId { address: Test, name: Identifier("M1") }), FunctionDefinitionIndex(1), 8)] }), location: Module(ModuleId { address: Test, name: Identifier("M1") }), indices: [], offsets: [(FunctionDefinitionIndex(0), 26)] }), command: Some(0) } }

task 4 'run'. lines 64-66:
Error: Transaction Effects Status: Insufficient Gas.
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: InsufficientGas, source: Some(VMError { major_status: OUT_OF_GAS, sub_status: None, message: None, exec_state: Some(ExecutionState { stack_trace: [(Some(ModuleId { address: Test, name: Identifier("M1") }), FunctionDefinitionIndex(1), 8)] }), location: Module(ModuleId { address: Test, name: Identifier("M1") }), indices: [], offsets: [(FunctionDefinitionIndex(0), 34)] }), command: Some(0) } }

task 5 'run'. lines 67-69:
Error: Transaction Effects Status: Insufficient Gas.
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: InsufficientGas, source: Some(VMError { major_status: OUT_OF_GAS, sub_status: None, message: None, exec_state: Some(ExecutionState { stack_trace: [(Some(ModuleId { address: Test, name: Identifier("M1") }), FunctionDefinitionIndex(1), 8)] }), location: Module(ModuleId { address: Test, name: Identifier("M1") }), indices: [], offsets: [(FunctionDefinitionIndex(0), 34)] }), command: Some(0) } }

task 6 'run'. lines 70-72:
Error: Transaction Effects Status: Insufficient Gas.
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: InsufficientGas, source: Some(VMError { major_status: OUT_OF_GAS, sub_status: None, message: None, exec_state: Some(ExecutionState { stack_trace: [] }), location: Module(ModuleId { address: Test, name: Identifier("M1") }), indices: [], offsets: [(FunctionDefinitionIndex(0), 34)] }), command: Some(0) } }

task 7 'run'. lines 73-75:
Error: Transaction Effects Status: Insufficient Gas.
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: InsufficientGas, source: Some(VMError { major_status: OUT_OF_GAS, sub_status: None, message: None, exec_state: Some(ExecutionState { stack_trace: [] }), location: Module(ModuleId { address: Test, name: Identifier("M1") }), indices: [], offsets: [(FunctionDefinitionIndex(0), 34)] }), command: Some(0) } }

task 8 'run'. lines 76-78:
Error: Transaction Effects Status: Insufficient Gas.
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: InsufficientGas, source: Some(VMError { major_status: OUT_OF_GAS, sub_status: None, message: None, exec_state: Some(ExecutionState { stack_trace: [] }), location: Module(ModuleId { address: Test, name: Identifier("M1") }), indices: [], offsets: [(FunctionDefinitionIndex(0), 34)] }), command: Some(0) } }

task 9 'run'. lines 79-79:
Error: Transaction Effects Status: Insufficient Gas.
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: InsufficientGas, source: Some(VMError { major_status: OUT_OF_GAS, sub_status: None, message: None, exec_state: Some(ExecutionState { stack_trace: [] }), location: Module(ModuleId { address: Test, name: Identifier("M1") }), indices: [], offsets: [(FunctionDefinitionIndex(0), 26)] }), command: Some(0) } }
