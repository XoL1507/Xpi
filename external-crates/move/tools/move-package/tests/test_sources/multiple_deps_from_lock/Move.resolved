ResolvedGraph {
    graph: DependencyGraph {
        root_path: "tests/test_sources/multiple_deps_from_lock",
        root_package: "test",
        package_graph: {
            "test": [
                (
                    "C",
                    Outgoing,
                ),
                (
                    "D",
                    Outgoing,
                ),
            ],
            "C": [
                (
                    "test",
                    Incoming,
                ),
            ],
            "D": [
                (
                    "test",
                    Incoming,
                ),
            ],
        },
        package_table: {
            "C": Package {
                kind: Local(
                    "deps_only/C",
                ),
                version: None,
                resolver: None,
            },
            "D": Package {
                kind: Local(
                    "deps_only/D",
                ),
                version: None,
                resolver: None,
            },
        },
        always_deps: {
            "C",
            "D",
            "test",
        },
        manifest_digest: Some(
            "FE671355454D2C48E232FB7E8E32B2D48AB921C4993F4758705F3CD9BC52792F",
        ),
        deps_digest: Some(
            "9AE2C7D9835B118893E2BF651D37467EBBC20D37D996AD986866F7351DEF407F",
        ),
    },
    build_options: BuildConfig {
        dev_mode: true,
        test_mode: false,
        generate_docs: false,
        generate_abis: false,
        install_dir: Some(
            "ELIDED_FOR_TEST",
        ),
        force_recompilation: false,
        lock_file: Some(
            "ELIDED_FOR_TEST",
        ),
        additional_named_addresses: {},
        fetch_deps_only: false,
        skip_fetch_latest_git_deps: false,
        default_flavor: None,
        default_edition: None,
    },
    package_table: {
        "C": Package {
            source_package: SourceManifest {
                package: PackageInfo {
                    name: "C",
                    version: (
                        0,
                        0,
                        0,
                    ),
                    authors: [],
                    license: None,
                    edition: None,
                    flavor: None,
                    custom_properties: {},
                },
                addresses: Some(
                    {
                        "CA": Some(
                            00000000000000000000000000000001,
                        ),
                    },
                ),
                dev_address_assignments: None,
                build: None,
                dependencies: {},
                dev_dependencies: {},
            },
            package_path: "ELIDED_FOR_TEST",
            renaming: {},
            resolved_table: {
                "CA": 00000000000000000000000000000001,
            },
            source_digest: "ELIDED_FOR_TEST",
        },
        "D": Package {
            source_package: SourceManifest {
                package: PackageInfo {
                    name: "D",
                    version: (
                        0,
                        0,
                        0,
                    ),
                    authors: [],
                    license: None,
                    edition: None,
                    flavor: None,
                    custom_properties: {},
                },
                addresses: Some(
                    {
                        "DA": Some(
                            00000000000000000000000000000002,
                        ),
                    },
                ),
                dev_address_assignments: None,
                build: None,
                dependencies: {},
                dev_dependencies: {},
            },
            package_path: "ELIDED_FOR_TEST",
            renaming: {},
            resolved_table: {
                "DA": 00000000000000000000000000000002,
            },
            source_digest: "ELIDED_FOR_TEST",
        },
        "test": Package {
            source_package: SourceManifest {
                package: PackageInfo {
                    name: "test",
                    version: (
                        0,
                        0,
                        0,
                    ),
                    authors: [],
                    license: None,
                    edition: None,
                    flavor: None,
                    custom_properties: {},
                },
                addresses: Some(
                    {
                        "A": Some(
                            00000000000000000000000000000003,
                        ),
                    },
                ),
                dev_address_assignments: None,
                build: None,
                dependencies: {
                    "C": Internal(
                        InternalDependency {
                            kind: Local(
                                "deps_only/C",
                            ),
                            subst: None,
                            version: None,
                            digest: None,
                            dep_override: false,
                        },
                    ),
                    "D": Internal(
                        InternalDependency {
                            kind: Local(
                                "deps_only/D",
                            ),
                            subst: None,
                            version: None,
                            digest: None,
                            dep_override: false,
                        },
                    ),
                },
                dev_dependencies: {},
            },
            package_path: "ELIDED_FOR_TEST",
            renaming: {},
            resolved_table: {
                "A": 00000000000000000000000000000003,
                "CA": 00000000000000000000000000000001,
                "DA": 00000000000000000000000000000002,
            },
            source_digest: "ELIDED_FOR_TEST",
        },
    },
}
