name: Attach Sui binaries to a release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      sui_tag:
        description: 'Sui repo tag to build from'
        type: string
        required: true

env:
  TAG_NAME: "${{ github.event.inputs.sui_tag || github.ref }}"
  CARGO_TERM_COLOR: always
  # Disable incremental compilation.
  #
  # Incremental compilation is useful as part of an edit-build-test-edit cycle,
  # as it lets the compiler avoid recompiling code that hasn't changed. However,
  # on CI, we're not making small edits; we're almost always building the entire
  # project from scratch. Thus, incremental compilation on CI actually
  # introduces *additional* overhead to support making future builds
  # faster...but no future builds will ever occur in any given CI environment.
  #
  # See https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
  # for details.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short

jobs:
  release-build:
    timeout-minutes: 45
    strategy:
      matrix:
        os: [windows-ghcloud, ubuntu-ghcloud, macos-latest-xl, macos-arm64-self-hosted]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clean up tag name ${{ env.TAG_NAME }}
        shell: bash
        run: | 
          echo "sui_tag=$(echo ${{ env.TAG_NAME }} | sed s/'refs\/tags\/'//)" >> $GITHUB_ENV

      - name: Checking out ${{ env.sui_tag }}
        if: ${{ env.sui_tag != 'main' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ env.sui_tag }}
      
      - name: Install nexttest (Windows)
        if: ${{ matrix.os == 'windows-ghcloud' && env.sui_tag != 'main'  }}
        uses: taiki-e/install-action@nextest

      - name: Setup protoc (Windows)
        if: ${{ matrix.os == 'windows-ghcloud' && env.sui_tag != 'main'  }}
        uses: arduino/setup-protoc@v1
        # this avoids rate-limiting
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install postgres (Windows)
        if: ${{ matrix.os == 'windows-ghcloud' && env.sui_tag != 'main'  }}
        shell: bash
        run: |
          choco install postgresql12 --force --params '/Password:root'
          echo "C:\Program Files\PostgreSQL\12\bin" >> $GITHUB_PATH
          echo "C:\Program Files\PostgreSQL\12\lib" >> $GITHUB_PATH
          echo "PQ_LIB_DIR=C:\Program Files\PostgreSQL\12\lib" >> $GITHUB_ENV
          echo "PG_DATABASE_URL=postgres://postgres:root@localhost/" >> $GITHUB_ENV
          echo "PG_EXAMPLE_DATABASE_URL=postgres://postgres:root@localhost/diesel_example" >> $GITHUB_ENV          

      - name: cargo build (release) for ${{ matrix.os }} platform
        if: ${{ env.sui_tag != 'main' }}
        shell: bash
        run: |
          [ -f ~/.cargo/env ] && source ~/.cargo/env ; cargo build --release

      - name: Rename binaries for ${{ matrix.os }}
        if: ${{ env.sui_tag != 'main' && matrix.os != 'windows-ghcloud' }}
        shell: bash
        run: |
          export arch=$(uname -m)
          export system_os=$(echo ${{ matrix.os }} | cut -d- -f1)
          export os_type="${system_os}-${arch}"
          echo "os_type=${system_os}-${arch}" >> $GITHUB_ENV
          mv ./target/release/sui ./target/release/sui-${os_type}
          mv ./target/release/sui-node ./target/release/sui-node-${os_type}
          mv ./target/release/sui-tool ./target/release/sui-tool-${os_type}
          mv ./target/release/sui-faucet ./target/release/sui-faucet-${os_type}
          mv ./target/release/sui-test-validator ./target/release/sui-test-validator-${os_type}
          mv ./target/release/sui-indexer ./target/release/sui-indexer-${os_type}
          tar -cvzf ./target/release/sui-${{ env.sui_tag }}-${os_type}.tgz ./target/release/sui*-${os_type}*

      - name: Rename binaries for Windows
        if: ${{ env.sui_tag != 'main' && matrix.os == 'windows-ghcloud' }}
        shell: bash
        run: |
          export arch=$(uname -m)
          export os_type="windows-${arch}"
          echo "os_type=${os_type}" >> $GITHUB_ENV
          mv ./target/release/sui.exe ./target/release/sui-${os_type}.exe
          mv ./target/release/sui-node.exe ./target/release/sui-node-${os_type}.exe
          mv ./target/release/sui-tool.exe ./target/release/sui-tool-${os_type}.exe
          mv ./target/release/sui-faucet.exe ./target/release/sui-faucet-${os_type}.exe
          mv ./target/release/sui-test-validator.exe ./target/release/sui-test-validator-${os_type}.exe
          mv ./target/release/sui-indexer.exe ./target/release/sui-indexer-${os_type}.exe
          tar -cvzf ./target/release/sui-${{ env.sui_tag }}-${os_type}.tgz ./target/release/sui*-${os_type}*

      - name: Upload release artifacts for ${{ matrix.os }} platform
        if: ${{ env.sui_tag != 'main' }}
        uses: actions/upload-artifact@v3
        with:
          name: sui-binaries-${{ matrix.os }}
          if-no-files-found: error
          path: |
            ./target/release/sui-${{ env.sui_tag }}-${{ env.os_type }}.tgz

      - name: Publish binaries for ${{ env.sui_tag }} release
        if: ${{ env.sui_tag != 'main' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.sui_tag }}
          files: |
            ./target/release/sui-${{ env.sui_tag }}-${{ env.os_type }}.tgz
        env:
          # Have to use a Personal Access Token (PAT), based on https://tinyurl.com/2by2ntdr
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_BUILDS_TOKEN }}
