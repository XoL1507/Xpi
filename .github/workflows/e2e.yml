name: End-to-end Tests
on: pull_request
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  diff:
    runs-on: ubuntu-latest
    outputs:
      isWallet: ${{ (steps.turbo.outputs.packages && contains(fromJson(steps.turbo.outputs.packages), 'sui-wallet')) }}
      isExplorer: ${{ (steps.turbo.outputs.packages && contains(fromJson(steps.turbo.outputs.packages), 'sui-explorer')) }}
      isTypescriptSDK: ${{ (steps.turbo.outputs.packages && contains(fromJson(steps.turbo.outputs.packages), '@mysten/sui.js')) }}
      isRust: ${{ steps.diff.outputs.isRust }}
    steps:
      - uses: actions/checkout@7dd9e2a3dc350cf687eb1b2a4fadfee8c8e49675 # pin@v3
      - name: Detect Changes (turbo)
        uses: "./.github/actions/turbo-diffs"
        id: turbo
      - name: Detect Changes (diff)
        uses: "./.github/actions/diffs"
        id: diff

  # Run e2e test against localnet built on the main branch
  localnet:
    name: Localnet
    needs: diff
    if: needs.diff.outputs.isExplorer == 'true' || needs.diff.outputs.isTypescriptSDK == 'true' || needs.diff.outputs.isWallet == 'true' || needs.diff.outputs.isRust == 'true'
    runs-on: ubuntu-ghcloud
    steps:
      - uses: actions/checkout@7dd9e2a3dc350cf687eb1b2a4fadfee8c8e49675 # pin@v3
      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # pin@v1
      # Disabled for now as it makes test runs take longer
      # - uses: bmwill/rust-cache@v1 # Fork of 'Swatinem/rust-cache' which allows caching additional paths
      - uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd # pin@v2.2.4
        with:
          version: 8
      - run: cargo build --bin sui-test-validator --bin sui --profile dev
      - name: Install Nodejs
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # pin@v3
        with:
          node-version: "18"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Install Playwright Browsers
        run: pnpm explorer playwright install --with-deps chromium

      - name: Set env
        run: |
          echo "VITE_SUI_BIN=$PWD/target/debug/sui" >> $GITHUB_ENV
          echo "E2E_RUN_LOCAL_NET_CMD=(RUST_LOG=info RUST_BACKTRACE=1 $(echo $PWD/target/debug/sui-test-validator))" >> $GITHUB_ENV

      - name: Run TS SDK e2e tests
        if: ${{ needs.diff.outputs.isTypescriptSDK == 'true' || needs.diff.outputs.isRust == 'true'}}
        run: pnpm dlx concurrently --kill-others --success command-1 "$E2E_RUN_LOCAL_NET_CMD" 'pnpm sdk test:e2e'

      - name: Run Explorer e2e tests
        # need to run Explorer e2e when its upstream(TS SDK and Rust) or itself is changed
        if: ${{ needs.diff.outputs.isTypescriptSDK == 'true' || needs.diff.outputs.isExplorer == 'true' || needs.diff.outputs.isRust == 'true'}}
        run: pnpm explorer playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-explorer
          path: apps/explorer/playwright-report/
          retention-days: 30

      # Disable wallet devenet test
      # - name: Build Wallet
      #   # need to run Wallet e2e when its upstream(TS SDK and Rust) or itself is changed
      #   if: ${{ needs.diff.outputs.isWallet == 'true' || needs.diff.outputs.isRust == 'true' || needs.diff.outputs.isTypescriptSDK == 'true'}}
      #   run: pnpm wallet build
      # - name: Run Wallet e2e tests
      #   if: ${{ needs.diff.outputs.isWallet == 'true' || needs.diff.outputs.isRust == 'true' || needs.diff.outputs.isTypescriptSDK == 'true'}}
      #   run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- pnpm wallet playwright test
      # - uses: actions/upload-artifact@v3
      #   if: always()
      #   with:
      #     name: playwright-report-wallet
      #     path: apps/wallet/playwright-report/
      #     retention-days: 30
      
# Run e2e test against localnet built on the devnet branch for backward compatibility check
  local_devnet_branch:
    name: Local Network Built on devnet branch
    needs: diff
    # TODO: add wallet e2e to the `if` condition when available
    if: needs.diff.outputs.isExplorer == 'true' || needs.diff.outputs.isTypescriptSDK == 'true'
    runs-on: ubuntu-ghcloud
    steps:
      # checkout the devnet branch
      - uses: actions/checkout@7dd9e2a3dc350cf687eb1b2a4fadfee8c8e49675 # pin@v3
        with:
          ref: devnet
      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # pin@v1
      # Disabled for now as it makes test runs take longer
      # - uses: bmwill/rust-cache@v1 # Fork of 'Swatinem/rust-cache' which allows caching additional paths
      - uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd # pin@v2.2.4
        with:
          version: 8
      
      - name: Check s3 if binaries have been uploaded already
          continue-on-error: true
          id: check_s3
          run: |
            echo "Checking if s3 binaries have been built for ${{ github.sha }}"
            echo "s3_file_exist=$(curl -Is https://sui-releases.s3.us-east-1.amazonaws.com/${{ github.sha }}/debug/sui-test-validator | head -n 1 | grep '200 OK')" >> $GITHUB_ENV

      - name: cargo build
          if: env.s3_file_exist == '' # if empty, we have not built and uploaded this binary to s3 yet
          run: |
            cargo build --bin sui-test-validator --bin sui

      - name: Dowload from S3
          if: env.s3_file_exist != '' # only download if the s3 file exists
          working-directory: ./target/debug
          run: |
            mkdir -p $PWD/target/debug
            wget -O target/debug/sui-test-validator https://sui-releases.s3.us-east-1.amazonaws.com/${{ github.sha }}/debug/sui-test-validator
            chmod +x $PWD/target/debug/sui-test-validator
            wget -O target/debug/sui-test-validator https://sui-releases.s3.us-east-1.amazonaws.com/${{ github.sha }}/debug/sui
            chmod +x $PWD/target/debug/sui

      - name: Configure AWS credentials
          if: env.s3_file_exist == '' # if empty, we have not built and uploaded this binary to s3 yet
          uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # pin@v1
          continue-on-error: true
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-2
      
      - name: Publish to S3
          if: env.s3_file_exist == '' # if empty, we have not built and uploaded this binary to s3 yet
          working-directory: ./target/debug
          run: |
            aws s3 cp sui s3://sui-releases/${{ github.sha }}/debug/sui
            aws s3 cp sui s3://sui-releases/${{ github.sha }}/debug/sui-test-validator

      # checkout current branch
      - uses: actions/checkout@7dd9e2a3dc350cf687eb1b2a4fadfee8c8e49675 # pin@v3
        with:
          clean: false

      - name: Install Nodejs
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # pin@v3
        with:
          node-version: "18"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Install Playwright Browsers
        run: pnpm explorer playwright install --with-deps chromium

      - name: Set env
        run: |
          echo "E2E_RUN_LOCAL_NET_CMD=(RUST_LOG=\"consensus=off\" $(echo $PWD/target/debug/sui-test-validator))" >> $GITHUB_ENV
          echo "VITE_SUI_BIN=$PWD/target/debug/sui" >> $GITHUB_ENV

      - name: Run TS SDK e2e tests
        if: ${{ needs.diff.outputs.isTypescriptSDK == 'true' }}
        run: pnpm dlx concurrently --kill-others --success command-1 "$E2E_RUN_LOCAL_NET_CMD" 'pnpm sdk test:e2e'

      - name: Run Explorer e2e tests
        if: ${{ needs.diff.outputs.isExplorer == 'true' || needs.diff.outputs.isTypescriptSDK == 'true'}}
        run: pnpm explorer playwright test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-explorer
          path: apps/explorer/playwright-report/
          retention-days: 30
      # TODO: add wallet e2e when available

  # Run e2e test against localnet built on the Testnet branch for backward compatibility check
  local_testnet_branch:
    name: Local Network Built on testnet branch
    needs: diff
    # TODO: add wallet e2e to the `if` condition when available
    if: needs.diff.outputs.isExplorer == 'true' || needs.diff.outputs.isTypescriptSDK == 'true'
    runs-on: ubuntu-ghcloud
    steps:
      # checkout the testnet branch
      - uses: actions/checkout@7dd9e2a3dc350cf687eb1b2a4fadfee8c8e49675 # pin@v3
        with:
          ref: testnet
      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # pin@v1
      # Disabled for now as it makes test runs take longer
      # - uses: bmwill/rust-cache@v1 # Fork of 'Swatinem/rust-cache' which allows caching additional paths
      - uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd # pin@v2.2.4
        with:
          version: 8
      
      - name: Check s3 if binaries have been uploaded already
          continue-on-error: true
          id: check_s3
          run: |
            echo "Checking if s3 binaries have been built for ${{ github.sha }}"
            echo "s3_file_exist=$(curl -Is https://sui-releases.s3.us-east-1.amazonaws.com/${{ github.sha }}/debug/sui-test-validator | head -n 1 | grep '200 OK')" >> $GITHUB_ENV

      - name: cargo build
          if: env.s3_file_exist == '' # if empty, we have not built and uploaded this binary to s3 yet
          run: |
            cargo build --bin sui-test-validator --bin sui

      - name: Dowload from S3
          if: env.s3_file_exist != '' # only download if the s3 file exists
          working-directory: ./target/debug
          run: |
            mkdir -p $PWD/target/debug
            wget -O target/debug/sui-test-validator https://sui-releases.s3.us-east-1.amazonaws.com/${{ github.sha }}/debug/sui-test-validator
            chmod +x $PWD/target/debug/sui-test-validator
            wget -O target/debug/sui-test-validator https://sui-releases.s3.us-east-1.amazonaws.com/${{ github.sha }}/debug/sui
            chmod +x $PWD/target/debug/sui

      - name: Configure AWS credentials
          if: env.s3_file_exist == '' # if empty, we have not built and uploaded this binary to s3 yet
          uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # pin@v1
          continue-on-error: true
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-2
      
      - name: Publish to S3
          if: env.s3_file_exist == '' # if empty, we have not built and uploaded this binary to s3 yet
          working-directory: ./target/debug
          run: |
            aws s3 cp sui s3://sui-releases/${{ github.sha }}/debug/sui
            aws s3 cp sui s3://sui-releases/${{ github.sha }}/debug/sui-test-validator

      # checkout current branch
      - uses: actions/checkout@7dd9e2a3dc350cf687eb1b2a4fadfee8c8e49675 # pin@v3
        with:
          clean: false

      - name: Install Nodejs
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # pin@v3
        with:
          node-version: "18"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Install Playwright Browsers
        run: pnpm explorer playwright install --with-deps chromium

      - name: Set env
        run: |
          echo "E2E_RUN_LOCAL_NET_CMD=(RUST_LOG=\"consensus=off\" $(echo $PWD/target/debug/sui-test-validator))" >> $GITHUB_ENV
          echo "VITE_SUI_BIN=$PWD/target/debug/sui" >> $GITHUB_ENV

      - name: Run TS SDK e2e tests
        if: ${{ needs.diff.outputs.isTypescriptSDK == 'true' }}
        run: pnpm dlx concurrently --kill-others --success command-1 "$E2E_RUN_LOCAL_NET_CMD" 'pnpm sdk test:e2e'

      - name: Run Explorer e2e tests
        if: ${{ needs.diff.outputs.isExplorer == 'true' || needs.diff.outputs.isTypescriptSDK == 'true'}}
        run: pnpm explorer playwright test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-explorer
          path: apps/explorer/playwright-report/
          retention-days: 30